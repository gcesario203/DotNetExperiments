# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:

services:
  # Serviços de banco de dados
  basketdb:
    image: redis
    container_name: basketdb
    restart: always
    ports:
      - 6379:6379

  discountdb:
    image: postgres
    container_name: discountdb
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  orderdb:
    image: mcr.microsoft.com/mssql/server
    container_name: orderdb
    environment:
      SA_PASSWORD: "PasseOWork123@"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - 1433:1433

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
  # Serviços auxiliares
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    restart: always
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  # Aplicações
  catalogapi:
    image: catalogapi
    container_name: catalogapi
    environment:
      - DatabaseSettings:ConnectionString=mongodb://catalogdb:27017
      - DatabaseSettings:DatabaseName=CatalogDb
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - catalogdb
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    ports:
      - 5000:80

  basketapi:
    image: basketapi
    container_name: basketapi
    environment:
      - CacheSettings:ConnectionString=basketdb:6379
      - GrpcSettings:DiscountUrl=http://discountgrpc
      - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - basketdb
      - rabbitmq
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    ports:
      - 5001:80

  discountapi:
    image: discountapi
    container_name: discountapi
    depends_on:
      - discountdb
    environment:
      - DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=root;Password=root;
      - ASPNETCORE_ENVIRONMENT=Development
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    ports:
      - 5002:80

  discountgrpc:
    image: discountgrpc
    container_name: discountgrpc
    depends_on:
      - discountdb
    environment:
      - DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=root;Password=root;
      - ASPNETCORE_ENVIRONMENT=Development
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    ports:
      - 5003:80

  orderapi:
    image: orderapi
    container_name: orderapi
    depends_on:
      - orderdb
      - rabbitmq
    environment:
      - ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=PasseOWork123@;
      - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672
      - ASPNETCORE_ENVIRONMENT=Development
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    ports:
      - 5004:80